- content_for :footer do
  css:
    ul.dynatree-container { 
      height: 300px;important! 
      overflow: scroll;important!
    }
  javascript:
    $(function(){
      $('.typeahead').typeahead()
      function updateCategories(cat_ids){
        var ids = (cat_ids == "" ? null : cat_ids)
        $.ajax({
          url: '#{{admin_product_path(@product)}}',
          type: 'put',
          data: {authenticity_token:"#{{form_authenticity_token}}", product:{category_ids:ids}},
          dataType: 'json',
          success: function(json) {
          }
        })
      }

      $("#tree3").dynatree({
        initAjax: {
          url: '#{{admin_categories_path}}',
          data: {
            product_id: '#{{@product.id}}',
          }
        },
        checkbox: true,
        selectMode: 2,
        //minExpandLevel:1,
        //autoCollapse:false,
        //activeVisible:true,
        onSelect: function(select, node) {
          // Get a list of all selected nodes, and convert to a key array:
          var selKeys = $.map(node.tree.getSelectedNodes(), function(node){
            return node.data.key;
          });
          $("#echoSelection3").text(selKeys.join(", "));

          // Get a list of all selected TOP nodes
          var selRootNodes = node.tree.getSelectedNodes(true);
          // ... and convert to a key array:
          var selRootKeys = $.map(selRootNodes, function(node){
            return node.data.key;
          });
          $("#echoSelectionRootKeys3").text(selRootKeys.join(", "));
          $("#echoSelectionRoots3").text(selRootNodes.join(", "));

          updateCategories(selKeys)
        },
        onDblClick: function(node, event) {
          node.toggleSelect();
        },
        onKeydown: function(node, event) {
          if( event.which == 32 ) {
            node.toggleSelect();
            return false;
          }
        },
        // The following options are only required, if we have more than one tree on one page:
        //  initId: "treeData",
        cookieId: "dynatree-Cb3",
        idPrefix: "dynatree-Cb3-"
      });
      $("#btnToggleSelect").click(function(){
        $("#tree2").dynatree("getRoot").visit(function(node){
          node.toggleSelect();

        });
        return false;
      });
      $("#btnDeselectAll").click(function(){
        $("#tree2").dynatree("getRoot").visit(function(node){
          node.select(false);
        });
        return false;
      });
      $("#btnSelectAll").click(function(){
        $("#tree2").dynatree("getRoot").visit(function(node){
          node.select(true);
        });
        return false;
      });
      <!-- Start_Exclude: This block is not part of the sample code -->
      $("#skinCombo")
      .val(0) // set state to prevent caching
      .change(function(){
        var href = "../src/"
          + $(this).val()
          + "/ui.dynatree.css"
          + "?reload="+ new Date().getTime();
        $("#skinSheet").attr("href", href);
      });
    });

- content_for :breadcrumb do
  == breadcrumb([{ t(:home) => admin_dashboard_path }, { t(:management) => '' }, { t(:products) => url_for(:controller => :products) }, { @product.name => '' }])

/ = render "imentore/admin/products/top"

.wrapper.wrapper-content.animated.fadeInRight
  .row  
    .col-lg-12
      .tabs-container
        =  render "imentore/admin/products/top"
        / ul.nav.nav-tabs
        /   li.active
        /     a data-toggle="tab" href="#tab-1"  This is tab
        /   li
        /     a data-toggle="tab" href="#tab-2"  This is second tab
        .tab-content
          .tab#product.tab-pane.active
            .panel-body
              = simple_form_for @product, url: [:admin, @product], :html => { :class => "form-horizontal" }, wrapper: :horizontal_form, wrapper_mappings: { check_boxes: :horizontal_radio_and_checkboxes, radio_buttons: :horizontal_radio_and_checkboxes, file: :horizontal_file_input, boolean: :horizontal_boolean } do |f|
                .row
                  .col-md-6
                    = f.error_notification
                    = f.input :active
                    = f.input :featured
                    = f.input :name
                    = f.input :handle
                    = f.input :description, input_html: { :rows => 5, :class => 'textarea' }, :as => :text
                  .col-md-6
                    h4
                      = t(:categories)
                    #tree3
                .row
                  .col-md-12
                    legend= t(:brand)
                    = f.input :product_brand_name, input_html: {class: 'span5', 'data-provide'=>"typeahead", 'data-source'=>"#{brand_collection(current_store)}", value: f.object.try(:product_brand).try(:name), autocomplete:"off"}, placeholder: t(:product_brand_select) + '...'
                / .row
                /   .span10
                /     = link_to('#product-brand', class: :btn, 'data-toggle'=>'modal') do
                /       i.icon-black.icon-plus
                /       '
                /       = t(:product_brand_new)
                .hr-line-dashed
                .row 
                  .col-md-12
                    .form-group
                      .col-sm-4.col-sm-offset-0
                        = f.submit(:class => "btn btn-primary")

#product-brand.modal.hide.fade.in
  = render file: 'imentore/admin/product_brands/new', product: @product

.hide
