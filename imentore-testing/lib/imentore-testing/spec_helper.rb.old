$LOAD_PATH << '../imentore-base/lib'
# require "bundler/setup"
require "pry"

# Bundler.require(:default, :test)

# ActionMailer::Base.delivery_method = :test
# ActionMailer::Base.perform_deliveries = true
# ActionMailer::Base.default_url_options[:host] = "test.com"

# SHOUT! http://guides.rubyonrails.org/2_3_release_notes.html#quieter-backtraces
Rails.backtrace_cleaner.remove_silencers!

# Configure capybara for integration testing
require "capybara/rails"
require "capybara/rspec"
Capybara.javascript_driver = :webkit

require "database_cleaner"
DatabaseCleaner.strategy = :transaction

require "shoulda-matchers"

require "imentore-testing/factories"

RSpec.configure do |config|
  config.include Imentore::Core::Engine.routes.url_helpers
  config.include Devise::TestHelpers, type: :controller

  config.before(:each) do
    # DatabaseCleaner.start
    Capybara.reset_sessions!
    # https://github.com/rspec/rspec-rails/pull/471
    #
    # Currently I need to set routes manually in before block in every test. I
    # can't do it in RSpec config because before block of ControllerExampleGroup
    # runs after before block in RSpec config and overwrites @route variable.
    #
    # @routes = Imentore::Core::Engine.routes
    #
    # http://stackoverflow.com/a/7967503
    # http://gavinmorrice.com/blog/posts/22-how-to-test-routes-in-a-rails-3-1-mountable-engine
    # http://www.builtfromsource.com/2011/09/21/testing-routes-with-rails-3-1-engines/
    #
    # use_route: doesn't seem to work in rails 3.2
    # http://stackoverflow.com/a/5832908
    # http://stackoverflow.com/a/7506094

    Imentore.config.domain = "imentore.dev"
  end

  config.after(:each) do
    DatabaseCleaner.clean
  end

  # DatabaseCleaner will handle the transactions
  # We'll use :truncation only for Cucumber and Capybara w/ js: true
  # config.use_transactional_fixtures = false

  # If true, the base class of anonymous controllers will be inferred
  # automatically. This will be the default behavior in future versions of
  # rspec-rails.
  # config.infer_base_class_for_anonymous_controllers = true
end
